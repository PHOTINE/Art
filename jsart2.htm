<head>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js"></script>


    <script>
        $(function () {
            const NUM_SQUARES = 999
            let hue=270

            let t=0;

            _.times(NUM_SQUARES, (n) =>
                $("#app").append($("<span class='square' \
                    style='position: relative; \
                    ' \
                    data-dx='"+ Math.random() * 10 + "' \
                    data-dy='"+ Math.random() * 10 + "' >  \
                        <span class='boundingbox' data-vx='0' data-vy='0'></span> \
                </span>"))
            )

            let lastMX, lastMY;
            let lastTime

            let mouseXV, mouseYV;


            $("body").mousemove((e) => {

                const currTime = Date.now()
                const dt = (currTime - lastTime) || 1

                mouseXV = (e.pageX - lastMX) / dt
                mouseYV = (e.pageY - lastMY) / dt

                lastMX = e.pageX
                lastMY = e.pageY
                lastTime = currTime

                
            })



            $(".boundingbox").mousemove((e) => {
                // console.log(mouseXV, mouseYV)
                
                const PUSH_SPEED = 20

                e.currentTarget.setAttribute('data-vx', mouseXV * PUSH_SPEED)
                e.currentTarget.setAttribute('data-vy', mouseYV * PUSH_SPEED)
            })

            tick = () => {
                hue+= 2
                $('.square').each((i, e) => {
                    e.style.backgroundColor=" hsl("+hue+", " + i / NUM_SQUARES * 100 + "%, 50%)"
                    // console.log(Number($(e).attr('data-dx')))
                    // console.log($(e).find('.boundingbox').first().attr('data-vy'))

                    // f = k dx

                    // k dx/m =  a
                    let k=.1
                    let f=.05

// debugger

                    let dx = Number(e.getAttribute('data-dx')) 
                    let dy = Number(e.getAttribute('data-dy'))

                    let bb = e.childNodes[1]

                    // if(isNaN(dx))
                    //     throw new Error();

                    let vx = (Number(bb.getAttribute('data-vx')) ) - dx*k 
                    let vy = (Number(bb.getAttribute('data-vy')) ) - dy*k

                    vx-=vx*f
                    vy-=vy*f


                    const VIB_MAG=1
                    const VIB_R=2*Math.PI/40
                    vx+=VIB_MAG*Math.cos(t*VIB_R)
                    vy+=VIB_MAG*Math.sin(t*VIB_R)

                    
                    // console.log(vx, vy)
                    // $(e).find('.boundingbox').first().attr('data-vx', x * k /m)

                    e.setAttribute('data-dx', dx + vx)
                    e.setAttribute('data-dy', dy + vy)

                    bb.setAttribute('data-vx', vx)
                    bb.setAttribute('data-vy', vy)


                    e.style.left = e.getAttribute('data-dx') + "px"
                    e.style.top = e.getAttribute('data-dy') + "px"

                    t++;
                })
                setTimeout(tick, 30)
            }

            tick()

            window.scroll(0, 150)

        })
    </script>
    <style>
        #app {
            width: 1428px
        }

        .square {
            display: inline-block;
            width: 18px;
            height: 18px;
            margin: 10px;
        }

        .boundingbox {
            width: 50px;
            height: 50px;
            /* border: 1px solid red; */
            position: absolute;
            top: -25px;
            left: -25px;
        }

        body {
            background: black
        }
    </style>
</head>

<body>
    <div id="app"></div>


</body>